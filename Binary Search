## /* JAVA SOLUTION */
class Main {
    static int binarySearch(int arr[], int key){
        int l=0;
        int r = arr.length-1;
        while(l<=r){
            int mid = l+(r-l)/2;
            if(arr[mid]==key) return mid;
            else if(key>arr[mid]) l=mid+1;
            else r=mid-1;
        }
        return -1;
    }
    
    public static void main(String[] args) {
        int arr[] = {1,5,11,22,34,56,77,88,99};
        int key = 5;
        int index = binarySearch(arr, key);
        System.out.println("Index of " + key + " is " + index);
    }
}


** NOTE: 
> mid ,l ,r are indexes
> Array should be montonous or sorted.

** Ways to find mid
1. mid = l+(r-l)/2
2. mid = (l+r)>>1




## /* C++ */
// Online C++ compiler to run C++ program online
#include <iostream>
using namespace std;

int binarySearch(int arr[], int n, int key){
    int l=0;
    int r=n-1;
    while(l<=r){
        int mid = l+(r-l)/2;
        if(arr[mid]==key) return mid;
        else if(key>arr[mid]) l=mid+1;
        else r=mid-1;
    }
    return -1;
}

int main() {
    int arr[] = {0,1,2,4,5,6,7};
    int key = 5;
    cout<<binarySearch(arr,7, 2);
    return 0;
}
