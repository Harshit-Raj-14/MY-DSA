PS- 1310. XOR Queries of a Subarray
For each query i compute the XOR of elements from lefti to righti 
(that is, arr[lefti] XOR arr[lefti + 1] XOR ... XOR arr[righti]).

/* CODE */
class Solution {
    public int[] xorQueries(int[] arr, int[][] queries) {
        int xor[] = new int[arr.length];
        xor[0]^=arr[0];
        for(int i=1;i<arr.length;i++){
            xor[i]=xor[i-1]^arr[i];
        }
        int ans[] = new int[queries.length];
        for(int i=0;i<queries.length;i++){
            int l=queries[i][0];
            int r=queries[i][1];
            if(l==0) ans[i] = xor[r];
            else ans[i]=xor[r] ^ xor[l-1];  //when l>0
        }
        return ans;
    }
}

/*
LOGIC---
XOR too is an accumulation like sum.
Magar xor khud ka hi patta kat deta hai.
You don't need to subtract soemthing possitive in case of a prefix sum.

For prefix xor array:
xor rnage(l,r) = xor_prefix[r]^xor_prefix[l-1] => xor will itself subtract from the accumulation for subquery
Reason, a^a=0
*/